#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#define KEYS_L 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29  // Left-hand keys
#define KEYS_R 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35  // Right-hand keys
#define THUMBS 36 37 38 39 40 41  // Thumb keys

/ {
  chosen {
    zmk,matrix_transform = &default_transform;
    //zmk,matrix_transform = &five_column_transform;
  };
};



/ {
    behaviors {
td0: tap_dance_0 {
      compatible = "zmk,behavior-tap-dance";
      label = "TAP_DANCE_0";
      #binding-cells = <0>;
      tapping-term-ms = <400>;
      bindings = <&kp G>, <&kp LBKT>, <&kp LBRC>;
      };
td1: tap_dance_1 {
    compatible = "zmk,behavior-tap-dance";
    label = "TAP_DANCE_1";
    #binding-cells = <0>;
    tapping-term-ms = <500>;
    bindings = <&kp H>, <&kp RBKT>, <&kp RBRC>;
                };
td2: tap_dance_2 {
    compatible = "zmk,behavior-tap-dance";
    label = "TAP_DANCE_2";
    #binding-cells = <0>;
    tapping-term-ms = <600>;
    bindings = <&kp T>, <&kp EQUAL>, <&kp PLUS>;
                };
td3: tap_dance_3 {
    compatible = "zmk,behavior-tap-dance";
    label = "TAP_DANCE_3";
    #binding-cells = <0>;
    tapping-term-ms = <700>;
    bindings = <&kp Y>, <&kp MINUS>, <&kp UNDER>;
                };

mo_tog: behavior_mo_tog {
        compatible = "zmk,behavior-hold-tap";
        label = "mo_tog";
        #binding-cells = <2>;
        flavor = "hold-preferred";
        tapping-term-ms = <200>;
        bindings = <&mo>, <&tog>;
                };
  hml: home_row_left {
      compatible = "zmk,behavior-hold-tap";
      label = "HOME_ROW_LEFT";
      #binding-cells = <2>;
      flavor = "balanced";
      tapping-term-ms = <280>;
      quick-tap-ms = <175>;
      require-prior-idle-ms = <150>;
      bindings = <&kp>, <&kp>;
      hold-trigger-key-positions = <KEYS_R THUMBS>;
      hold-trigger-on-release;
  };
  
  hmr: home_row_right {
      compatible = "zmk,behavior-hold-tap";
      label = "HOME_ROW_RIGHT";
      #binding-cells = <2>;
      flavor = "balanced";
      tapping-term-ms = <280>;
      quick-tap-ms = <175>;
      require-prior-idle-ms = <150>;
      bindings = <&kp>, <&kp>;
      hold-trigger-key-positions = <KEYS_L THUMBS>;
      hold-trigger-on-release;
  };

        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        label = "QWERTY";
// -----------------------------------------------------------------------------------------
// |  ESC        |  Q         |  W        |  E        |  R         |    |  T = +  |     |  _ - Y |  U           |  I        |  O         |  P       | BKSP   |
// | CAPS (LYR)  |  CTRL / A  |  ATL / S  |  Meh / D  |  Hyper / F |    |  G [ {  |     | } ] H  |  Hyper / J   |  Meh / K  |  ALT / L  | CTRL / ;  |  '     |
// | SHFT (      |  Z         |  X        |  C        |  V         |    |  B      |     |  N     |  M           |  ,        |  .         |  /       | SHFT ) |
//                                        | GUI       | LAYER 1    |    | TAB     |     | SPC    | RSE          | ALT       |
                        bindings = <
   &kp ESC              &kp Q          &kp W         &kp E                 &kp R                     &td2      &td3      &kp U                     &kp I                &kp O         &kp P             &kp BSPC
   &caps_word           &hml LCTRL A   &hml LALT S   &hml LC(LS(LALT)) D   &hml LC(LS(LA(LGUI))) F   &td0      &td1      &hmr LC(LS(LA(LGUI))) J   &hmr LC(LS(LALT)) K  &hmr LALT L   &hmr LCTRL SEMI   &kp SQT
   &mt LSHFT LPAR       &kp Z          &kp X         &kp C                 &kp V                     &kp B     &kp N     &kp M                     &kp COMMA            &kp DOT       &kp FSLH          &mt RSHFT RPAR
                                                     &kp LGUI              &mo_tog 1 1               &kp TAB   &kp SPC   &kp RET                   &kp RALT
                        >;
                };
                lower_layer {
                        label = "NUMBER";
// -----------------------------------------------------------------------------------------
// |  TAB |  1     |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// | BTCLR| BT_NXT |     | LFT | RGT |     |   |     | UP  | DWN |     |     |      |
// | SHFT |        |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
 &trans          &kp N1       &kp N2   &kp N3    &kp N4   &kp N5       &kp N6   &kp N7    &kp N8  &kp N9    &kp N0 &kp BSPC
 &bt BT_CLR      &bt BT_NXT   &trans   &kp LEFT  &kp RIGHT  &trans    &trans   &kp UP  &kp DOWN  &trans    &trans &trans
 &studio_unlock  &trans       &trans   &trans    &trans   &trans       &trans   &trans    &trans  &trans    &trans &trans
                                  &kp LGUI  &to 2   &trans       &trans   &trans    &kp RALT
                        >;
                };

                raise_layer {
                        label = "SYMBOL";
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp ESC     &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
   &kp CAPS    &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &kp GRAVE
   &mt LSHFT LPAR &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
                    	     &kp LGUI   &to 0    &trans      &trans    &trans    &kp RALT
                        >;
                };
        };
};
